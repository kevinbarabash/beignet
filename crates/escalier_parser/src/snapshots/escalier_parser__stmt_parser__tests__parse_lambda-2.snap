---
source: crates/escalier_parser/src/stmt_parser.rs
expression: "parse(\"let add = fn (x) => fn (y) => x + y;\")"
---
[
    Stmt {
        kind: Let {
            pattern: Pattern {
                span: 4..7,
                kind: Ident(
                    BindingIdent {
                        name: "add",
                        span: 4..7,
                        mutable: false,
                    },
                ),
            },
            expr: Expr {
                kind: Function {
                    params: [
                        FuncParam {
                            pattern: Pattern {
                                span: 14..15,
                                kind: Ident(
                                    BindingIdent {
                                        name: "x",
                                        span: 14..15,
                                        mutable: false,
                                    },
                                ),
                            },
                            type_ann: None,
                            optional: false,
                        },
                    ],
                    body: Expr(
                        Expr {
                            kind: Function {
                                params: [
                                    FuncParam {
                                        pattern: Pattern {
                                            span: 24..25,
                                            kind: Ident(
                                                BindingIdent {
                                                    name: "y",
                                                    span: 24..25,
                                                    mutable: false,
                                                },
                                            ),
                                        },
                                        type_ann: None,
                                        optional: false,
                                    },
                                ],
                                body: Expr(
                                    Expr {
                                        kind: Binary {
                                            left: Expr {
                                                kind: Identifier(
                                                    "x",
                                                ),
                                                span: 30..31,
                                            },
                                            op: Plus,
                                            right: Expr {
                                                kind: Identifier(
                                                    "y",
                                                ),
                                                span: 34..35,
                                            },
                                        },
                                        span: 30..35,
                                    },
                                ),
                                type_ann: None,
                            },
                            span: 20..35,
                        },
                    ),
                    type_ann: None,
                },
                span: 10..35,
            },
            type_ann: None,
        },
        span: 0..35,
    },
]
