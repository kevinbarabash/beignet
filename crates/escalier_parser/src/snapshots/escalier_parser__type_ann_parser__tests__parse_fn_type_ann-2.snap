---
source: crates/escalier_parser/src/type_ann_parser.rs
expression: "parse(\"fn (a: number, b: number) -> number throws string\")"
---
TypeAnn {
    kind: Function(
        FunctionType {
            type_params: None,
            params: [
                FuncParam {
                    pattern: Pattern {
                        kind: Ident(
                            BindingIdent {
                                name: "a",
                                span: 4..5,
                                mutable: false,
                            },
                        ),
                        span: 4..5,
                        inferred_type: None,
                    },
                    type_ann: Some(
                        TypeAnn {
                            kind: Number,
                            span: 7..13,
                            inferred_type: None,
                        },
                    ),
                    optional: false,
                },
                FuncParam {
                    pattern: Pattern {
                        kind: Ident(
                            BindingIdent {
                                name: "b",
                                span: 15..16,
                                mutable: false,
                            },
                        ),
                        span: 15..16,
                        inferred_type: None,
                    },
                    type_ann: Some(
                        TypeAnn {
                            kind: Number,
                            span: 18..24,
                            inferred_type: None,
                        },
                    ),
                    optional: false,
                },
            ],
            ret: TypeAnn {
                kind: Number,
                span: 29..35,
                inferred_type: None,
            },
            throws: Some(
                TypeAnn {
                    kind: String,
                    span: 43..49,
                    inferred_type: None,
                },
            ),
        },
    ),
    span: 0..2,
    inferred_type: None,
}
