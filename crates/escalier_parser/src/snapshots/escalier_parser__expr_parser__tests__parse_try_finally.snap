---
source: crates/escalier_parser/src/expr_parser.rs
expression: "parse(r#\"\n            try {\n                canThrow()\n            } finally {\n                cleanup()\n            }\n            \"#)"
---
Try(
    Try {
        span: 13..109,
        body: Block {
            span: 16..59,
            stmts: [
                Stmt {
                    kind: Expr {
                        expr: Call(
                            Call {
                                span: 35..45,
                                callee: Ident(
                                    Ident {
                                        name: "canThrow",
                                        span: 35..43,
                                    },
                                ),
                                type_args: None,
                                args: [],
                            },
                        ),
                    },
                    span: 35..45,
                },
            ],
        },
        catch: None,
        finally: Some(
            Block {
                span: 67..109,
                stmts: [
                    Stmt {
                        kind: Expr {
                            expr: Call(
                                Call {
                                    span: 86..95,
                                    callee: Ident(
                                        Ident {
                                            name: "cleanup",
                                            span: 86..93,
                                        },
                                    ),
                                    type_args: None,
                                    args: [],
                                },
                            ),
                        },
                        span: 86..95,
                    },
                ],
            },
        ),
    },
)
