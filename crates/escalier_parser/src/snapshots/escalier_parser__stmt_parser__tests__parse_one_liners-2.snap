---
source: crates/escalier_parser/src/stmt_parser.rs
expression: "parse(r#\"let add = fn(a, b) => a + b add(5, 10)\"#)"
---
[
    Stmt {
        kind: Let {
            pattern: Pattern {
                span: 4..7,
                kind: Ident(
                    BindingIdent {
                        name: "add",
                        span: 4..7,
                        mutable: false,
                    },
                ),
            },
            expr: Function(
                Function {
                    span: 10..27,
                    params: [
                        FuncParam {
                            pattern: Pattern {
                                span: 13..14,
                                kind: Ident(
                                    BindingIdent {
                                        name: "a",
                                        span: 13..14,
                                        mutable: false,
                                    },
                                ),
                            },
                            type_ann: None,
                            optional: false,
                        },
                        FuncParam {
                            pattern: Pattern {
                                span: 16..17,
                                kind: Ident(
                                    BindingIdent {
                                        name: "b",
                                        span: 16..17,
                                        mutable: false,
                                    },
                                ),
                            },
                            type_ann: None,
                            optional: false,
                        },
                    ],
                    body: Expr(
                        Binary(
                            Binary {
                                span: 22..27,
                                left: Ident(
                                    Ident {
                                        name: "a",
                                        span: 22..23,
                                    },
                                ),
                                op: Plus,
                                right: Ident(
                                    Ident {
                                        name: "b",
                                        span: 26..27,
                                    },
                                ),
                            },
                        ),
                    ),
                    type_ann: None,
                    is_async: false,
                    is_gen: false,
                },
            ),
            type_ann: None,
        },
        span: 0..27,
    },
    Stmt {
        kind: Expr {
            expr: Call(
                Call {
                    span: 28..38,
                    args: [
                        Num(
                            Num {
                                span: 32..33,
                                value: "5",
                            },
                        ),
                        Num(
                            Num {
                                span: 35..37,
                                value: "10",
                            },
                        ),
                    ],
                    callee: Ident(
                        Ident {
                            name: "add",
                            span: 28..31,
                        },
                    ),
                },
            ),
        },
        span: 28..38,
    },
]
