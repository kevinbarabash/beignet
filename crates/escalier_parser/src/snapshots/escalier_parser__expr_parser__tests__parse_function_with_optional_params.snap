---
source: crates/escalier_parser/src/expr_parser.rs
expression: "parse(r#\"fn (x: number, y: number, z?: number): number => { return x + y }\"#)"
---
Function(
    Function {
        span: 0..65,
        params: [
            FuncParam {
                pattern: Pattern {
                    span: 4..5,
                    kind: Ident(
                        BindingIdent {
                            name: "x",
                            span: 4..5,
                            mutable: false,
                        },
                    ),
                },
                type_ann: Some(
                    TypeAnn {
                        kind: Number,
                        span: 7..13,
                    },
                ),
                optional: false,
            },
            FuncParam {
                pattern: Pattern {
                    span: 15..16,
                    kind: Ident(
                        BindingIdent {
                            name: "y",
                            span: 15..16,
                            mutable: false,
                        },
                    ),
                },
                type_ann: Some(
                    TypeAnn {
                        kind: Number,
                        span: 18..24,
                    },
                ),
                optional: false,
            },
            FuncParam {
                pattern: Pattern {
                    span: 26..27,
                    kind: Ident(
                        BindingIdent {
                            name: "z",
                            span: 26..27,
                            mutable: false,
                        },
                    ),
                },
                type_ann: Some(
                    TypeAnn {
                        kind: Number,
                        span: 30..36,
                    },
                ),
                optional: true,
            },
        ],
        body: Block(
            Block {
                span: 48..65,
                stmts: [
                    Stmt {
                        kind: Return {
                            arg: Some(
                                Binary(
                                    Binary {
                                        span: 58..63,
                                        left: Ident(
                                            Ident {
                                                name: "x",
                                                span: 58..59,
                                            },
                                        ),
                                        op: Plus,
                                        right: Ident(
                                            Ident {
                                                name: "y",
                                                span: 62..63,
                                            },
                                        ),
                                    },
                                ),
                            ),
                        },
                        span: 58..63,
                    },
                ],
            },
        ),
        type_ann: Some(
            TypeAnn {
                kind: Number,
                span: 39..45,
            },
        ),
    },
)
