---
source: crates/escalier_parser/src/expr_parser.rs
expression: "parse(r#\"fn (x: number, y: number, z?: number) -> number { return x + y }\"#)"
---
Expr {
    kind: Function(
        Function {
            type_params: None,
            params: [
                FuncParam {
                    pattern: Pattern {
                        kind: Ident(
                            BindingIdent {
                                name: "x",
                                span: 4..5,
                                mutable: false,
                            },
                        ),
                        span: 4..5,
                        inferred_type: None,
                    },
                    type_ann: Some(
                        TypeAnn {
                            kind: Number,
                            span: 7..13,
                            inferred_type: None,
                        },
                    ),
                    optional: false,
                },
                FuncParam {
                    pattern: Pattern {
                        kind: Ident(
                            BindingIdent {
                                name: "y",
                                span: 15..16,
                                mutable: false,
                            },
                        ),
                        span: 15..16,
                        inferred_type: None,
                    },
                    type_ann: Some(
                        TypeAnn {
                            kind: Number,
                            span: 18..24,
                            inferred_type: None,
                        },
                    ),
                    optional: false,
                },
                FuncParam {
                    pattern: Pattern {
                        kind: Ident(
                            BindingIdent {
                                name: "z",
                                span: 26..27,
                                mutable: false,
                            },
                        ),
                        span: 26..27,
                        inferred_type: None,
                    },
                    type_ann: Some(
                        TypeAnn {
                            kind: Number,
                            span: 30..36,
                            inferred_type: None,
                        },
                    ),
                    optional: true,
                },
            ],
            body: Block(
                Block {
                    span: 48..64,
                    stmts: [
                        Stmt {
                            kind: Return(
                                ReturnStmt {
                                    arg: Some(
                                        Expr {
                                            kind: Binary(
                                                Binary {
                                                    left: Expr {
                                                        kind: Ident(
                                                            Ident {
                                                                name: "x",
                                                                span: 57..58,
                                                            },
                                                        ),
                                                        span: 57..58,
                                                        inferred_type: None,
                                                    },
                                                    op: Plus,
                                                    right: Expr {
                                                        kind: Ident(
                                                            Ident {
                                                                name: "y",
                                                                span: 61..62,
                                                            },
                                                        ),
                                                        span: 61..62,
                                                        inferred_type: None,
                                                    },
                                                },
                                            ),
                                            span: 57..62,
                                            inferred_type: None,
                                        },
                                    ),
                                },
                            ),
                            span: 57..62,
                            inferred_type: None,
                        },
                    ],
                },
            ),
            type_ann: Some(
                TypeAnn {
                    kind: Number,
                    span: 41..47,
                    inferred_type: None,
                },
            ),
            throws: None,
            is_async: false,
            is_gen: false,
        },
    ),
    span: 0..64,
    inferred_type: None,
}
