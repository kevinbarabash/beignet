---
source: crates/escalier_parser/src/expr_parser.rs
expression: "parse(\"a * b / c % d\")"
---
Expr {
    kind: Binary {
        left: Expr {
            kind: Binary {
                left: Expr {
                    kind: Binary {
                        left: Expr {
                            kind: Identifier(
                                "a",
                            ),
                            loc: SourceLocation {
                                start: Position {
                                    line: 1,
                                    column: 1,
                                },
                                end: Position {
                                    line: 1,
                                    column: 2,
                                },
                            },
                        },
                        op: Times,
                        right: Expr {
                            kind: Identifier(
                                "b",
                            ),
                            loc: SourceLocation {
                                start: Position {
                                    line: 1,
                                    column: 5,
                                },
                                end: Position {
                                    line: 1,
                                    column: 6,
                                },
                            },
                        },
                    },
                    loc: SourceLocation {
                        start: Position {
                            line: 1,
                            column: 1,
                        },
                        end: Position {
                            line: 1,
                            column: 6,
                        },
                    },
                },
                op: Divide,
                right: Expr {
                    kind: Identifier(
                        "c",
                    ),
                    loc: SourceLocation {
                        start: Position {
                            line: 1,
                            column: 9,
                        },
                        end: Position {
                            line: 1,
                            column: 10,
                        },
                    },
                },
            },
            loc: SourceLocation {
                start: Position {
                    line: 1,
                    column: 1,
                },
                end: Position {
                    line: 1,
                    column: 10,
                },
            },
        },
        op: Modulo,
        right: Expr {
            kind: Identifier(
                "d",
            ),
            loc: SourceLocation {
                start: Position {
                    line: 1,
                    column: 13,
                },
                end: Position {
                    line: 1,
                    column: 14,
                },
            },
        },
    },
    loc: SourceLocation {
        start: Position {
            line: 1,
            column: 1,
        },
        end: Position {
            line: 1,
            column: 14,
        },
    },
}
