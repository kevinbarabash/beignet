---
source: crates/escalier_parser/src/expr_parser.rs
expression: "parse(\"fn () { let x = 5; let y = 10; return x + y; }\")"
---
Expr {
    kind: Function {
        params: [],
        body: [
            Stmt {
                kind: Let {
                    name: "x",
                    expr: Expr {
                        kind: Literal(
                            Number(
                                "5",
                            ),
                        ),
                        loc: SourceLocation {
                            start: Position {
                                line: 1,
                                column: 17,
                            },
                            end: Position {
                                line: 1,
                                column: 18,
                            },
                        },
                    },
                },
                loc: SourceLocation {
                    start: Position {
                        line: 1,
                        column: 9,
                    },
                    end: Position {
                        line: 1,
                        column: 18,
                    },
                },
            },
            Stmt {
                kind: Let {
                    name: "y",
                    expr: Expr {
                        kind: Literal(
                            Number(
                                "10",
                            ),
                        ),
                        loc: SourceLocation {
                            start: Position {
                                line: 1,
                                column: 28,
                            },
                            end: Position {
                                line: 1,
                                column: 30,
                            },
                        },
                    },
                },
                loc: SourceLocation {
                    start: Position {
                        line: 1,
                        column: 20,
                    },
                    end: Position {
                        line: 1,
                        column: 30,
                    },
                },
            },
            Stmt {
                kind: Return {
                    arg: Some(
                        Expr {
                            kind: Binary {
                                left: Expr {
                                    kind: Identifier(
                                        "x",
                                    ),
                                    loc: SourceLocation {
                                        start: Position {
                                            line: 1,
                                            column: 39,
                                        },
                                        end: Position {
                                            line: 1,
                                            column: 40,
                                        },
                                    },
                                },
                                op: Plus,
                                right: Expr {
                                    kind: Identifier(
                                        "y",
                                    ),
                                    loc: SourceLocation {
                                        start: Position {
                                            line: 1,
                                            column: 43,
                                        },
                                        end: Position {
                                            line: 1,
                                            column: 44,
                                        },
                                    },
                                },
                            },
                            loc: SourceLocation {
                                start: Position {
                                    line: 1,
                                    column: 39,
                                },
                                end: Position {
                                    line: 1,
                                    column: 44,
                                },
                            },
                        },
                    ),
                },
                loc: SourceLocation {
                    start: Position {
                        line: 1,
                        column: 39,
                    },
                    end: Position {
                        line: 1,
                        column: 44,
                    },
                },
            },
        ],
    },
    loc: SourceLocation {
        start: Position {
            line: 1,
            column: 1,
        },
        end: Position {
            line: 1,
            column: 47,
        },
    },
}
