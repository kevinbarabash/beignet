---
source: crates/escalier_parser/src/expr_parser.rs
expression: "parse(\"fn () => { let x = 5; let y = 10; return x + y; }\")"
---
Expr {
    kind: Function {
        params: [],
        body: Block(
            Block {
                span: 8..49,
                stmts: [
                    Stmt {
                        kind: Let {
                            pattern: Pattern {
                                span: 15..16,
                                kind: Ident(
                                    BindingIdent {
                                        name: "x",
                                        span: 15..16,
                                        mutable: false,
                                    },
                                ),
                            },
                            expr: Expr {
                                kind: Literal(
                                    Number(
                                        "5",
                                    ),
                                ),
                                span: 19..20,
                            },
                            type_ann: None,
                        },
                        span: 11..20,
                    },
                    Stmt {
                        kind: Let {
                            pattern: Pattern {
                                span: 26..27,
                                kind: Ident(
                                    BindingIdent {
                                        name: "y",
                                        span: 26..27,
                                        mutable: false,
                                    },
                                ),
                            },
                            expr: Expr {
                                kind: Literal(
                                    Number(
                                        "10",
                                    ),
                                ),
                                span: 30..32,
                            },
                            type_ann: None,
                        },
                        span: 22..32,
                    },
                    Stmt {
                        kind: Return {
                            arg: Some(
                                Expr {
                                    kind: Binary {
                                        left: Expr {
                                            kind: Identifier(
                                                "x",
                                            ),
                                            span: 41..42,
                                        },
                                        op: Plus,
                                        right: Expr {
                                            kind: Identifier(
                                                "y",
                                            ),
                                            span: 45..46,
                                        },
                                    },
                                    span: 41..46,
                                },
                            ),
                        },
                        span: 41..46,
                    },
                ],
            },
        ),
        type_ann: None,
    },
    span: 0..49,
}
