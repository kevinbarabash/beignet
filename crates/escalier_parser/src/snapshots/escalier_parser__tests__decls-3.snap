---
source: crates/escalier_parser/src/lib.rs
expression: "parse(\"declare let x: number;\")"
---
Ok(
    Program {
        body: [
            VarDecl {
                loc: SourceLocation {
                    start: Position {
                        line: 0,
                        column: 8,
                    },
                    end: Position {
                        line: 0,
                        column: 22,
                    },
                },
                span: 8..22,
                pattern: Pattern {
                    loc: SourceLocation {
                        start: Position {
                            line: 0,
                            column: 12,
                        },
                        end: Position {
                            line: 0,
                            column: 13,
                        },
                    },
                    span: 12..13,
                    kind: Ident(
                        BindingIdent {
                            name: "x",
                            mutable: false,
                            span: 12..13,
                            loc: SourceLocation {
                                start: Position {
                                    line: 0,
                                    column: 12,
                                },
                                end: Position {
                                    line: 0,
                                    column: 13,
                                },
                            },
                        },
                    ),
                    inferred_type: None,
                },
                type_ann: Some(
                    TypeAnn {
                        kind: Keyword(
                            KeywordType {
                                keyword: Number,
                            },
                        ),
                        loc: SourceLocation {
                            start: Position {
                                line: 0,
                                column: 15,
                            },
                            end: Position {
                                line: 0,
                                column: 21,
                            },
                        },
                        span: 15..21,
                        inferred_type: None,
                    },
                ),
                init: None,
                declare: true,
            },
        ],
    },
)
