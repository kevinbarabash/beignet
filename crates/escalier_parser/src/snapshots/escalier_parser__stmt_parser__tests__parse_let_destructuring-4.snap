---
source: crates/escalier_parser/src/stmt_parser.rs
expression: "parse(\"let [head, ...tail] = polygon;\")"
---
[
    Stmt {
        kind: Let {
            pattern: Pattern {
                loc: SourceLocation {
                    start: Position {
                        line: 1,
                        column: 5,
                    },
                    end: Position {
                        line: 1,
                        column: 20,
                    },
                },
                kind: Tuple(
                    TuplePat {
                        elems: [
                            Some(
                                TuplePatElem {
                                    pattern: Pattern {
                                        loc: SourceLocation {
                                            start: Position {
                                                line: 1,
                                                column: 6,
                                            },
                                            end: Position {
                                                line: 1,
                                                column: 10,
                                            },
                                        },
                                        kind: Ident(
                                            BindingIdent {
                                                name: "head",
                                                loc: SourceLocation {
                                                    start: Position {
                                                        line: 1,
                                                        column: 6,
                                                    },
                                                    end: Position {
                                                        line: 1,
                                                        column: 10,
                                                    },
                                                },
                                                mutable: false,
                                            },
                                        ),
                                    },
                                    init: None,
                                },
                            ),
                            Some(
                                TuplePatElem {
                                    pattern: Pattern {
                                        loc: SourceLocation {
                                            start: Position {
                                                line: 1,
                                                column: 12,
                                            },
                                            end: Position {
                                                line: 1,
                                                column: 15,
                                            },
                                        },
                                        kind: Rest(
                                            RestPat {
                                                arg: Pattern {
                                                    loc: SourceLocation {
                                                        start: Position {
                                                            line: 1,
                                                            column: 15,
                                                        },
                                                        end: Position {
                                                            line: 1,
                                                            column: 19,
                                                        },
                                                    },
                                                    kind: Ident(
                                                        BindingIdent {
                                                            name: "tail",
                                                            loc: SourceLocation {
                                                                start: Position {
                                                                    line: 1,
                                                                    column: 15,
                                                                },
                                                                end: Position {
                                                                    line: 1,
                                                                    column: 19,
                                                                },
                                                            },
                                                            mutable: false,
                                                        },
                                                    ),
                                                },
                                            },
                                        ),
                                    },
                                    init: None,
                                },
                            ),
                        ],
                        optional: false,
                    },
                ),
            },
            expr: Expr {
                kind: Identifier(
                    "polygon",
                ),
                loc: SourceLocation {
                    start: Position {
                        line: 1,
                        column: 23,
                    },
                    end: Position {
                        line: 1,
                        column: 30,
                    },
                },
            },
        },
        loc: SourceLocation {
            start: Position {
                line: 1,
                column: 1,
            },
            end: Position {
                line: 1,
                column: 30,
            },
        },
    },
]
