---
source: crates/escalier_parser/src/type_ann_parser.rs
expression: "parse(\"fn (a: number, b: number) => number\")"
---
TypeAnn {
    kind: Function(
        [
            FuncParam {
                pattern: Pattern {
                    kind: Ident(
                        BindingIdent {
                            name: "a",
                            span: 4..5,
                            mutable: false,
                        },
                    ),
                    span: 4..5,
                    inferred_type: None,
                },
                type_ann: Some(
                    TypeAnn {
                        kind: Number,
                        span: 7..13,
                    },
                ),
                optional: false,
            },
            FuncParam {
                pattern: Pattern {
                    kind: Ident(
                        BindingIdent {
                            name: "b",
                            span: 15..16,
                            mutable: false,
                        },
                    ),
                    span: 15..16,
                    inferred_type: None,
                },
                type_ann: Some(
                    TypeAnn {
                        kind: Number,
                        span: 18..24,
                    },
                ),
                optional: false,
            },
        ],
        TypeAnn {
            kind: Number,
            span: 29..35,
        },
    ),
    span: 0..2,
}
