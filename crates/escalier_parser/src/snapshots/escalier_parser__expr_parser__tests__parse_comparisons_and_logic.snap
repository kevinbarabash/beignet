---
source: crates/escalier_parser/src/expr_parser.rs
expression: "parse(\"a > b && c >= d || e < f && g <= h\")"
---
Expr {
    kind: Binary {
        left: Expr {
            kind: Binary {
                left: Expr {
                    kind: Binary {
                        left: Expr {
                            kind: Identifier(
                                "a",
                            ),
                            span: 0..1,
                        },
                        op: GreaterThan,
                        right: Expr {
                            kind: Identifier(
                                "b",
                            ),
                            span: 4..5,
                        },
                    },
                    span: 0..5,
                },
                op: And,
                right: Expr {
                    kind: Binary {
                        left: Expr {
                            kind: Identifier(
                                "c",
                            ),
                            span: 9..10,
                        },
                        op: GreaterThanOrEqual,
                        right: Expr {
                            kind: Identifier(
                                "d",
                            ),
                            span: 14..15,
                        },
                    },
                    span: 9..15,
                },
            },
            span: 0..15,
        },
        op: Or,
        right: Expr {
            kind: Binary {
                left: Expr {
                    kind: Binary {
                        left: Expr {
                            kind: Identifier(
                                "e",
                            ),
                            span: 19..20,
                        },
                        op: LessThan,
                        right: Expr {
                            kind: Identifier(
                                "f",
                            ),
                            span: 23..24,
                        },
                    },
                    span: 19..24,
                },
                op: And,
                right: Expr {
                    kind: Binary {
                        left: Expr {
                            kind: Identifier(
                                "g",
                            ),
                            span: 28..29,
                        },
                        op: LessThanOrEqual,
                        right: Expr {
                            kind: Identifier(
                                "h",
                            ),
                            span: 33..34,
                        },
                    },
                    span: 28..34,
                },
            },
            span: 19..34,
        },
    },
    span: 0..34,
}
