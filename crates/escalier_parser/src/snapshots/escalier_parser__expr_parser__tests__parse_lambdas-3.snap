---
source: crates/escalier_parser/src/expr_parser.rs
expression: "parse(r#\"fn (x: number, y: number): number => x + y;\"#)"
---
Expr {
    kind: Function {
        params: [
            FuncParam {
                pattern: Pattern {
                    span: 4..5,
                    kind: Ident(
                        BindingIdent {
                            name: "x",
                            span: 4..5,
                            mutable: false,
                        },
                    ),
                },
                type_ann: Some(
                    TypeAnn {
                        kind: Number,
                        span: 7..13,
                    },
                ),
                optional: false,
            },
            FuncParam {
                pattern: Pattern {
                    span: 15..16,
                    kind: Ident(
                        BindingIdent {
                            name: "y",
                            span: 15..16,
                            mutable: false,
                        },
                    ),
                },
                type_ann: Some(
                    TypeAnn {
                        kind: Number,
                        span: 18..24,
                    },
                ),
                optional: false,
            },
        ],
        body: Expr(
            Expr {
                kind: Binary {
                    left: Expr {
                        kind: Identifier(
                            "x",
                        ),
                        span: 37..38,
                    },
                    op: Plus,
                    right: Expr {
                        kind: Identifier(
                            "y",
                        ),
                        span: 41..42,
                    },
                },
                span: 37..42,
            },
        ),
        type_ann: Some(
            TypeAnn {
                kind: Number,
                span: 27..33,
            },
        ),
    },
    span: 0..42,
}
