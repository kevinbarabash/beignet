---
source: crates/escalier_parser/src/pattern_parser.rs
expression: "parse(r#\"{kind: \"foo\", bar: _, values: [head, ...tail]}\"#)"
---
Pattern {
    kind: Object(
        ObjectPat {
            props: [
                KeyValue(
                    KeyValuePatProp {
                        span: 1..12,
                        key: Ident {
                            name: "kind",
                            span: 1..5,
                        },
                        value: Pattern {
                            kind: Lit(
                                LitPat {
                                    lit: String(
                                        "foo",
                                    ),
                                },
                            ),
                            span: 7..12,
                            inferred_type: None,
                        },
                        init: None,
                    },
                ),
                KeyValue(
                    KeyValuePatProp {
                        span: 14..20,
                        key: Ident {
                            name: "bar",
                            span: 14..17,
                        },
                        value: Pattern {
                            kind: Wildcard,
                            span: 19..20,
                            inferred_type: None,
                        },
                        init: None,
                    },
                ),
                KeyValue(
                    KeyValuePatProp {
                        span: 22..45,
                        key: Ident {
                            name: "values",
                            span: 22..28,
                        },
                        value: Pattern {
                            kind: Tuple(
                                TuplePat {
                                    elems: [
                                        Some(
                                            TuplePatElem {
                                                pattern: Pattern {
                                                    kind: Ident(
                                                        BindingIdent {
                                                            name: "head",
                                                            span: 31..35,
                                                            mutable: false,
                                                        },
                                                    ),
                                                    span: 31..35,
                                                    inferred_type: None,
                                                },
                                                init: None,
                                            },
                                        ),
                                        Some(
                                            TuplePatElem {
                                                pattern: Pattern {
                                                    kind: Rest(
                                                        RestPat {
                                                            arg: Pattern {
                                                                kind: Ident(
                                                                    BindingIdent {
                                                                        name: "tail",
                                                                        span: 40..44,
                                                                        mutable: false,
                                                                    },
                                                                ),
                                                                span: 40..44,
                                                                inferred_type: None,
                                                            },
                                                        },
                                                    ),
                                                    span: 36..40,
                                                    inferred_type: None,
                                                },
                                                init: None,
                                            },
                                        ),
                                    ],
                                    optional: false,
                                },
                            ),
                            span: 29..45,
                            inferred_type: None,
                        },
                        init: None,
                    },
                ),
            ],
            optional: false,
        },
    ),
    span: 0..46,
    inferred_type: None,
}
