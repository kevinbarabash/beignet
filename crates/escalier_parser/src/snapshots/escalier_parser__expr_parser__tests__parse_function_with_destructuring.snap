---
source: crates/escalier_parser/src/expr_parser.rs
expression: "parse(r#\"fn ({x, y}) => x + y\"#)"
---
Expr {
    kind: Function(
        Function {
            type_params: None,
            params: [
                FuncParam {
                    pattern: Pattern {
                        kind: Object(
                            ObjectPat {
                                props: [
                                    Shorthand(
                                        ShorthandPatProp {
                                            span: 5..6,
                                            ident: BindingIdent {
                                                name: "x",
                                                span: 5..6,
                                                mutable: false,
                                            },
                                            init: None,
                                        },
                                    ),
                                    Shorthand(
                                        ShorthandPatProp {
                                            span: 8..9,
                                            ident: BindingIdent {
                                                name: "y",
                                                span: 8..9,
                                                mutable: false,
                                            },
                                            init: None,
                                        },
                                    ),
                                ],
                                optional: false,
                            },
                        ),
                        span: 4..10,
                        inferred_type: None,
                    },
                    type_ann: None,
                    optional: false,
                },
            ],
            body: Expr(
                Expr {
                    kind: Binary(
                        Binary {
                            left: Expr {
                                kind: Ident(
                                    Ident {
                                        name: "x",
                                        span: 15..16,
                                    },
                                ),
                                span: 15..16,
                                inferred_type: None,
                            },
                            op: Plus,
                            right: Expr {
                                kind: Ident(
                                    Ident {
                                        name: "y",
                                        span: 19..20,
                                    },
                                ),
                                span: 19..20,
                                inferred_type: None,
                            },
                        },
                    ),
                    span: 15..20,
                    inferred_type: None,
                },
            ),
            type_ann: None,
            is_async: false,
            is_gen: false,
        },
    ),
    span: 0..20,
    inferred_type: None,
}
