---
source: crates/escalier_parser/src/expr_parser.rs
expression: "parse(\"foo()\\n(3+4) * 5\")"
---
Expr {
    kind: Binary(
        Binary {
            left: Expr {
                kind: Call(
                    Call {
                        callee: Expr {
                            kind: Call(
                                Call {
                                    callee: Expr {
                                        kind: Ident(
                                            Ident {
                                                name: "foo",
                                                span: 0..3,
                                            },
                                        ),
                                        span: 0..3,
                                        inferred_type: None,
                                    },
                                    type_args: None,
                                    args: [],
                                },
                            ),
                            span: 0..5,
                            inferred_type: None,
                        },
                        type_args: None,
                        args: [
                            Expr {
                                kind: Binary(
                                    Binary {
                                        left: Expr {
                                            kind: Num(
                                                Num {
                                                    value: "3",
                                                },
                                            ),
                                            span: 7..8,
                                            inferred_type: None,
                                        },
                                        op: Plus,
                                        right: Expr {
                                            kind: Num(
                                                Num {
                                                    value: "4",
                                                },
                                            ),
                                            span: 9..10,
                                            inferred_type: None,
                                        },
                                    },
                                ),
                                span: 7..10,
                                inferred_type: None,
                            },
                        ],
                    },
                ),
                span: 0..11,
                inferred_type: None,
            },
            op: Times,
            right: Expr {
                kind: Num(
                    Num {
                        value: "5",
                    },
                ),
                span: 14..15,
                inferred_type: None,
            },
        },
    ),
    span: 0..15,
    inferred_type: None,
}
