---
source: crates/escalier_parser/src/expr_parser.rs
expression: "parse(r#\"fn ({x, y}: Point) -> number { return x + y }\"#)"
---
Expr {
    kind: Function(
        Function {
            type_params: None,
            params: [
                FuncParam {
                    pattern: Pattern {
                        kind: Object(
                            ObjectPat {
                                props: [
                                    Shorthand(
                                        ShorthandPatProp {
                                            span: 5..6,
                                            ident: BindingIdent {
                                                name: "x",
                                                span: 5..6,
                                                mutable: false,
                                            },
                                            init: None,
                                        },
                                    ),
                                    Shorthand(
                                        ShorthandPatProp {
                                            span: 8..9,
                                            ident: BindingIdent {
                                                name: "y",
                                                span: 8..9,
                                                mutable: false,
                                            },
                                            init: None,
                                        },
                                    ),
                                ],
                                optional: false,
                            },
                        ),
                        span: 4..10,
                        inferred_type: None,
                    },
                    type_ann: Some(
                        TypeAnn {
                            kind: TypeRef(
                                "Point",
                                None,
                            ),
                            span: 12..17,
                            inferred_type: None,
                        },
                    ),
                    optional: false,
                },
            ],
            body: Block(
                Block {
                    span: 28..45,
                    stmts: [
                        Stmt {
                            kind: Return {
                                arg: Some(
                                    Expr {
                                        kind: Binary(
                                            Binary {
                                                left: Expr {
                                                    kind: Ident(
                                                        Ident {
                                                            name: "x",
                                                            span: 38..39,
                                                        },
                                                    ),
                                                    span: 38..39,
                                                    inferred_type: None,
                                                },
                                                op: Plus,
                                                right: Expr {
                                                    kind: Ident(
                                                        Ident {
                                                            name: "y",
                                                            span: 42..43,
                                                        },
                                                    ),
                                                    span: 42..43,
                                                    inferred_type: None,
                                                },
                                            },
                                        ),
                                        span: 38..43,
                                        inferred_type: None,
                                    },
                                ),
                            },
                            span: 38..43,
                            inferred_type: None,
                        },
                    ],
                },
            ),
            type_ann: Some(
                TypeAnn {
                    kind: Number,
                    span: 22..28,
                    inferred_type: None,
                },
            ),
            throws: None,
            is_async: false,
            is_gen: false,
        },
    ),
    span: 0..45,
    inferred_type: None,
}
