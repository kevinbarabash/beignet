---
source: crates/escalier_parser/src/pattern_parser.rs
expression: "parse(\"[a, b, c]\")"
---
Pattern {
    kind: Tuple(
        TuplePat {
            elems: [
                Some(
                    TuplePatElem {
                        pattern: Pattern {
                            kind: Ident(
                                BindingIdent {
                                    name: "a",
                                    span: 1..2,
                                    mutable: false,
                                },
                            ),
                            span: 1..2,
                            inferred_type: None,
                        },
                        init: None,
                    },
                ),
                Some(
                    TuplePatElem {
                        pattern: Pattern {
                            kind: Ident(
                                BindingIdent {
                                    name: "b",
                                    span: 4..5,
                                    mutable: false,
                                },
                            ),
                            span: 4..5,
                            inferred_type: None,
                        },
                        init: None,
                    },
                ),
                Some(
                    TuplePatElem {
                        pattern: Pattern {
                            kind: Ident(
                                BindingIdent {
                                    name: "c",
                                    span: 7..8,
                                    mutable: false,
                                },
                            ),
                            span: 7..8,
                            inferred_type: None,
                        },
                        init: None,
                    },
                ),
            ],
            optional: false,
        },
    ),
    span: 0..9,
    inferred_type: None,
}
