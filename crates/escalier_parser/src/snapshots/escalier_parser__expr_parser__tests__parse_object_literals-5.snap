---
source: crates/escalier_parser/src/expr_parser.rs
expression: "parse(r#\"{ \"a\": 1, [b]: 2, 0: \"zero\" }\"#)"
---
Expr {
    kind: Object(
        Object {
            properties: [
                Prop(
                    Property {
                        key: String(
                            "a",
                        ),
                        value: Expr {
                            kind: Num(
                                Num {
                                    value: "1",
                                },
                            ),
                            span: 7..8,
                            inferred_type: None,
                        },
                    },
                ),
                Prop(
                    Property {
                        key: Computed(
                            Expr {
                                kind: Ident(
                                    Ident {
                                        name: "b",
                                        span: 11..12,
                                    },
                                ),
                                span: 11..12,
                                inferred_type: None,
                            },
                        ),
                        value: Expr {
                            kind: Num(
                                Num {
                                    value: "2",
                                },
                            ),
                            span: 15..16,
                            inferred_type: None,
                        },
                    },
                ),
                Prop(
                    Property {
                        key: Number(
                            "0",
                        ),
                        value: Expr {
                            kind: Str(
                                Str {
                                    span: 21..27,
                                    value: "zero",
                                },
                            ),
                            span: 21..27,
                            inferred_type: None,
                        },
                    },
                ),
            ],
        },
    ),
    span: 0..29,
    inferred_type: None,
}
