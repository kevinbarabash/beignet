---
source: crates/escalier_parser/src/expr_parser.rs
expression: "parse(\"fn <T> (x: T) => x\")"
---
Expr {
    kind: Function(
        Function {
            type_params: Some(
                [
                    TypeParam {
                        span: 5..6,
                        name: "T",
                        bound: None,
                        default: None,
                    },
                ],
            ),
            params: [
                FuncParam {
                    pattern: Pattern {
                        kind: Ident(
                            BindingIdent {
                                name: "x",
                                span: 8..9,
                                mutable: false,
                            },
                        ),
                        span: 8..9,
                        inferred_type: None,
                    },
                    type_ann: Some(
                        TypeAnn {
                            kind: TypeRef(
                                "T",
                                None,
                            ),
                            span: 11..12,
                            inferred_type: None,
                        },
                    ),
                    optional: false,
                },
            ],
            body: Expr(
                Expr {
                    kind: Ident(
                        Ident {
                            name: "x",
                            span: 17..18,
                        },
                    ),
                    span: 17..18,
                    inferred_type: None,
                },
            ),
            type_ann: None,
            throws: None,
            is_async: false,
            is_gen: false,
        },
    ),
    span: 0..18,
    inferred_type: None,
}
