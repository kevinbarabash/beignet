---
source: crates/escalier_parser/src/expr_parser.rs
expression: "parse(r#\"\n            do {\n                let x = 5;\n                let y = 10;\n                x + y;\n            }\n            \"#)"
---
Expr {
    kind: Do {
        body: Block {
            span: 15..109,
            stmts: [
                Stmt {
                    kind: Let {
                        pattern: Pattern {
                            span: 38..39,
                            kind: Ident(
                                BindingIdent {
                                    name: "x",
                                    span: 38..39,
                                    mutable: false,
                                },
                            ),
                        },
                        expr: Expr {
                            kind: Literal(
                                Number(
                                    "5",
                                ),
                            ),
                            span: 42..43,
                        },
                        type_ann: None,
                    },
                    span: 34..43,
                },
                Stmt {
                    kind: Let {
                        pattern: Pattern {
                            span: 65..66,
                            kind: Ident(
                                BindingIdent {
                                    name: "y",
                                    span: 65..66,
                                    mutable: false,
                                },
                            ),
                        },
                        expr: Expr {
                            kind: Literal(
                                Number(
                                    "10",
                                ),
                            ),
                            span: 69..71,
                        },
                        type_ann: None,
                    },
                    span: 61..71,
                },
                Stmt {
                    kind: Expr {
                        expr: Expr {
                            kind: Binary {
                                left: Expr {
                                    kind: Identifier(
                                        "x",
                                    ),
                                    span: 89..90,
                                },
                                op: Plus,
                                right: Expr {
                                    kind: Identifier(
                                        "y",
                                    ),
                                    span: 93..94,
                                },
                            },
                            span: 89..94,
                        },
                    },
                    span: 89..94,
                },
            ],
        },
    },
    span: 13..109,
}
