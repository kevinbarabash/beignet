---
source: crates/escalier_parser/src/expr_parser.rs
expression: "parse(r#\"\n            do {\n                let x = 5\n                let y = 10\n                x + y\n            }\n            \"#)"
---
Expr {
    kind: Do(
        Do {
            body: Block {
                span: 15..106,
                stmts: [
                    Stmt {
                        kind: Let {
                            is_declare: false,
                            is_var: false,
                            pattern: Pattern {
                                kind: Ident(
                                    BindingIdent {
                                        name: "x",
                                        span: 38..39,
                                        mutable: false,
                                    },
                                ),
                                span: 38..39,
                                inferred_type: None,
                            },
                            expr: Some(
                                Expr {
                                    kind: Num(
                                        Num {
                                            value: "5",
                                        },
                                    ),
                                    span: 42..43,
                                    inferred_type: None,
                                },
                            ),
                            type_ann: None,
                        },
                        span: 34..43,
                        inferred_type: None,
                    },
                    Stmt {
                        kind: Let {
                            is_declare: false,
                            is_var: false,
                            pattern: Pattern {
                                kind: Ident(
                                    BindingIdent {
                                        name: "y",
                                        span: 64..65,
                                        mutable: false,
                                    },
                                ),
                                span: 64..65,
                                inferred_type: None,
                            },
                            expr: Some(
                                Expr {
                                    kind: Num(
                                        Num {
                                            value: "10",
                                        },
                                    ),
                                    span: 68..70,
                                    inferred_type: None,
                                },
                            ),
                            type_ann: None,
                        },
                        span: 60..70,
                        inferred_type: None,
                    },
                    Stmt {
                        kind: Expr {
                            expr: Expr {
                                kind: Binary(
                                    Binary {
                                        left: Expr {
                                            kind: Ident(
                                                Ident {
                                                    name: "x",
                                                    span: 87..88,
                                                },
                                            ),
                                            span: 87..88,
                                            inferred_type: None,
                                        },
                                        op: Plus,
                                        right: Expr {
                                            kind: Ident(
                                                Ident {
                                                    name: "y",
                                                    span: 91..92,
                                                },
                                            ),
                                            span: 91..92,
                                            inferred_type: None,
                                        },
                                    },
                                ),
                                span: 87..92,
                                inferred_type: None,
                            },
                        },
                        span: 87..92,
                        inferred_type: None,
                    },
                ],
            },
        },
    ),
    span: 13..106,
    inferred_type: None,
}
