---
source: crates/escalier_parser/src/lib.rs
expression: "parse(\"let foo = async () => await bar();\")"
---
Ok(
    Program {
        body: [
            VarDecl {
                loc: SourceLocation {
                    start: Position {
                        line: 0,
                        column: 0,
                    },
                    end: Position {
                        line: 0,
                        column: 34,
                    },
                },
                span: 0..34,
                pattern: Pattern {
                    loc: SourceLocation {
                        start: Position {
                            line: 0,
                            column: 4,
                        },
                        end: Position {
                            line: 0,
                            column: 7,
                        },
                    },
                    span: 4..7,
                    kind: Ident(
                        BindingIdent {
                            name: "foo",
                            mutable: false,
                            span: 4..7,
                            loc: SourceLocation {
                                start: Position {
                                    line: 0,
                                    column: 4,
                                },
                                end: Position {
                                    line: 0,
                                    column: 7,
                                },
                            },
                        },
                    ),
                    inferred_type: None,
                },
                type_ann: None,
                init: Some(
                    Expr {
                        loc: SourceLocation {
                            start: Position {
                                line: 0,
                                column: 10,
                            },
                            end: Position {
                                line: 0,
                                column: 33,
                            },
                        },
                        span: 10..33,
                        kind: Lambda(
                            Lambda {
                                params: [],
                                body: [
                                    Expr {
                                        loc: SourceLocation {
                                            start: Position {
                                                line: 0,
                                                column: 22,
                                            },
                                            end: Position {
                                                line: 0,
                                                column: 33,
                                            },
                                        },
                                        span: 22..33,
                                        kind: Await(
                                            Await {
                                                expr: Expr {
                                                    loc: SourceLocation {
                                                        start: Position {
                                                            line: 0,
                                                            column: 28,
                                                        },
                                                        end: Position {
                                                            line: 0,
                                                            column: 33,
                                                        },
                                                    },
                                                    span: 28..33,
                                                    kind: App(
                                                        App {
                                                            lam: Expr {
                                                                loc: SourceLocation {
                                                                    start: Position {
                                                                        line: 0,
                                                                        column: 28,
                                                                    },
                                                                    end: Position {
                                                                        line: 0,
                                                                        column: 31,
                                                                    },
                                                                },
                                                                span: 28..31,
                                                                kind: Ident(
                                                                    Ident {
                                                                        loc: SourceLocation {
                                                                            start: Position {
                                                                                line: 0,
                                                                                column: 28,
                                                                            },
                                                                            end: Position {
                                                                                line: 0,
                                                                                column: 31,
                                                                            },
                                                                        },
                                                                        span: 28..31,
                                                                        name: "bar",
                                                                    },
                                                                ),
                                                                inferred_type: None,
                                                            },
                                                            args: [],
                                                            type_args: None,
                                                        },
                                                    ),
                                                    inferred_type: None,
                                                },
                                            },
                                        ),
                                        inferred_type: None,
                                    },
                                ],
                                is_async: true,
                                return_type: None,
                                type_params: None,
                            },
                        ),
                        inferred_type: None,
                    },
                ),
                declare: false,
            },
        ],
    },
)
