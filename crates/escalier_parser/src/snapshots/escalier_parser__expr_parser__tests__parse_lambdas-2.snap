---
source: crates/escalier_parser/src/expr_parser.rs
expression: "parse(\"fn (x) => fn (y) => x + y;\")"
---
Expr {
    kind: Function {
        params: [
            FuncParam {
                pattern: Pattern {
                    loc: SourceLocation {
                        start: Position {
                            line: 1,
                            column: 5,
                        },
                        end: Position {
                            line: 1,
                            column: 6,
                        },
                    },
                    kind: Ident(
                        BindingIdent {
                            name: "x",
                            loc: SourceLocation {
                                start: Position {
                                    line: 1,
                                    column: 5,
                                },
                                end: Position {
                                    line: 1,
                                    column: 6,
                                },
                            },
                            mutable: false,
                        },
                    ),
                },
                type_ann: None,
                optional: false,
            },
        ],
        body: Expr(
            Expr {
                kind: Function {
                    params: [
                        FuncParam {
                            pattern: Pattern {
                                loc: SourceLocation {
                                    start: Position {
                                        line: 1,
                                        column: 15,
                                    },
                                    end: Position {
                                        line: 1,
                                        column: 16,
                                    },
                                },
                                kind: Ident(
                                    BindingIdent {
                                        name: "y",
                                        loc: SourceLocation {
                                            start: Position {
                                                line: 1,
                                                column: 15,
                                            },
                                            end: Position {
                                                line: 1,
                                                column: 16,
                                            },
                                        },
                                        mutable: false,
                                    },
                                ),
                            },
                            type_ann: None,
                            optional: false,
                        },
                    ],
                    body: Expr(
                        Expr {
                            kind: Binary {
                                left: Expr {
                                    kind: Identifier(
                                        "x",
                                    ),
                                    loc: SourceLocation {
                                        start: Position {
                                            line: 1,
                                            column: 21,
                                        },
                                        end: Position {
                                            line: 1,
                                            column: 22,
                                        },
                                    },
                                },
                                op: Plus,
                                right: Expr {
                                    kind: Identifier(
                                        "y",
                                    ),
                                    loc: SourceLocation {
                                        start: Position {
                                            line: 1,
                                            column: 25,
                                        },
                                        end: Position {
                                            line: 1,
                                            column: 26,
                                        },
                                    },
                                },
                            },
                            loc: SourceLocation {
                                start: Position {
                                    line: 1,
                                    column: 21,
                                },
                                end: Position {
                                    line: 1,
                                    column: 26,
                                },
                            },
                        },
                    ),
                    type_ann: None,
                },
                loc: SourceLocation {
                    start: Position {
                        line: 1,
                        column: 11,
                    },
                    end: Position {
                        line: 1,
                        column: 26,
                    },
                },
            },
        ),
        type_ann: None,
    },
    loc: SourceLocation {
        start: Position {
            line: 1,
            column: 1,
        },
        end: Position {
            line: 1,
            column: 26,
        },
    },
}
