---
source: crates/escalier_parser/src/expr_parser.rs
expression: "parse(\"fn (x) => fn (y) => x + y\")"
---
Function(
    Function {
        span: 0..25,
        params: [
            FuncParam {
                pattern: Pattern {
                    span: 4..5,
                    kind: Ident(
                        BindingIdent {
                            name: "x",
                            span: 4..5,
                            mutable: false,
                        },
                    ),
                },
                type_ann: None,
                optional: false,
            },
        ],
        body: Expr(
            Function(
                Function {
                    span: 10..25,
                    params: [
                        FuncParam {
                            pattern: Pattern {
                                span: 14..15,
                                kind: Ident(
                                    BindingIdent {
                                        name: "y",
                                        span: 14..15,
                                        mutable: false,
                                    },
                                ),
                            },
                            type_ann: None,
                            optional: false,
                        },
                    ],
                    body: Expr(
                        Binary(
                            Binary {
                                span: 20..25,
                                left: Ident(
                                    Ident {
                                        name: "x",
                                        span: 20..21,
                                    },
                                ),
                                op: Plus,
                                right: Ident(
                                    Ident {
                                        name: "y",
                                        span: 24..25,
                                    },
                                ),
                            },
                        ),
                    ),
                    type_ann: None,
                    is_async: false,
                },
            ),
        ),
        type_ann: None,
        is_async: false,
    },
)
