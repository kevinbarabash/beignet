---
source: crates/escalier_parser/src/expr_parser.rs
expression: "parse(r#\"\n            class<T> extends Foo {\n                fn bar<A>(self, a: A) -> T {}\n            }\n        \"#)"
---
Expr {
    kind: Class(
        Class {
            span: 13..95,
            type_params: Some(
                [
                    TypeParam {
                        span: 20..21,
                        name: "T",
                        bound: None,
                        default: None,
                    },
                ],
            ),
            super_class: Some(
                Ident {
                    name: "Foo",
                    span: 30..33,
                },
            ),
            super_type_args: None,
            body: [
                Method(
                    Method {
                        span: 52..81,
                        name: Ident(
                            Ident {
                                name: "bar",
                                span: 55..58,
                            },
                        ),
                        is_public: false,
                        is_async: false,
                        is_gen: false,
                        is_mutating: false,
                        is_static: false,
                        type_params: Some(
                            [
                                TypeParam {
                                    span: 60..61,
                                    name: "A",
                                    bound: None,
                                    default: None,
                                },
                            ],
                        ),
                        params: [
                            FuncParam {
                                pattern: Pattern {
                                    kind: Ident(
                                        BindingIdent {
                                            name: "a",
                                            span: 68..69,
                                            mutable: false,
                                        },
                                    ),
                                    span: 68..69,
                                    inferred_type: None,
                                },
                                type_ann: Some(
                                    TypeAnn {
                                        kind: TypeRef(
                                            "A",
                                            None,
                                        ),
                                        span: 71..72,
                                        inferred_type: None,
                                    },
                                ),
                                optional: false,
                            },
                        ],
                        body: Block {
                            span: 79..81,
                            stmts: [],
                        },
                        type_ann: Some(
                            TypeAnn {
                                kind: TypeRef(
                                    "T",
                                    None,
                                ),
                                span: 77..78,
                                inferred_type: None,
                            },
                        ),
                    },
                ),
            ],
        },
    ),
    span: 13..95,
    inferred_type: None,
}
