---
source: crates/escalier_hm/src/parser/mod.rs
expression: "parse(\"let thunk_arr: (() => undefined)[] = [];\")"
---
Ok(
    Program {
        statements: [
            Statement {
                loc: SourceLocation {
                    start: Position {
                        line: 0,
                        column: 0,
                    },
                    end: Position {
                        line: 0,
                        column: 40,
                    },
                },
                span: 0..40,
                kind: VarDecl(
                    VarDecl {
                        pattern: Pattern {
                            loc: SourceLocation {
                                start: Position {
                                    line: 0,
                                    column: 4,
                                },
                                end: Position {
                                    line: 0,
                                    column: 13,
                                },
                            },
                            span: 4..13,
                            kind: Ident(
                                BindingIdent {
                                    name: "thunk_arr",
                                    mutable: false,
                                    span: 4..13,
                                    loc: SourceLocation {
                                        start: Position {
                                            line: 0,
                                            column: 4,
                                        },
                                        end: Position {
                                            line: 0,
                                            column: 13,
                                        },
                                    },
                                },
                            ),
                            inferred_type: None,
                        },
                        type_ann: Some(
                            TypeAnn {
                                kind: Array(
                                    ArrayType {
                                        elem_type: TypeAnn {
                                            kind: Lam(
                                                LamType {
                                                    params: [],
                                                    ret: TypeAnn {
                                                        kind: Keyword(
                                                            KeywordType {
                                                                keyword: Undefined,
                                                            },
                                                        ),
                                                        loc: SourceLocation {
                                                            start: Position {
                                                                line: 0,
                                                                column: 22,
                                                            },
                                                            end: Position {
                                                                line: 0,
                                                                column: 31,
                                                            },
                                                        },
                                                        span: 22..31,
                                                        inferred_type: None,
                                                    },
                                                    type_params: None,
                                                },
                                            ),
                                            loc: SourceLocation {
                                                start: Position {
                                                    line: 0,
                                                    column: 16,
                                                },
                                                end: Position {
                                                    line: 0,
                                                    column: 31,
                                                },
                                            },
                                            span: 16..31,
                                            inferred_type: None,
                                        },
                                    },
                                ),
                                loc: SourceLocation {
                                    start: Position {
                                        line: 0,
                                        column: 15,
                                    },
                                    end: Position {
                                        line: 0,
                                        column: 34,
                                    },
                                },
                                span: 15..34,
                                inferred_type: None,
                            },
                        ),
                        init: Some(
                            Expr {
                                loc: SourceLocation {
                                    start: Position {
                                        line: 0,
                                        column: 37,
                                    },
                                    end: Position {
                                        line: 0,
                                        column: 39,
                                    },
                                },
                                span: 37..39,
                                kind: Tuple(
                                    Tuple {
                                        elems: [],
                                    },
                                ),
                                inferred_type: None,
                            },
                        ),
                        declare: false,
                    },
                ),
                inferred_type: None,
            },
        ],
    },
)
