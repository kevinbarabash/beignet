---
source: crates/escalier_hm/src/parser/mod.rs
expression: "parse(\"-10;\")"
---
Ok(
    Program {
        statements: [
            Statement {
                loc: SourceLocation {
                    start: Position {
                        line: 0,
                        column: 0,
                    },
                    end: Position {
                        line: 0,
                        column: 4,
                    },
                },
                span: 0..4,
                kind: ExprStmt(
                    Expr {
                        loc: SourceLocation {
                            start: Position {
                                line: 0,
                                column: 0,
                            },
                            end: Position {
                                line: 0,
                                column: 3,
                            },
                        },
                        span: 0..3,
                        kind: UnaryExpr(
                            UnaryExpr {
                                op: Minus,
                                arg: Expr {
                                    loc: SourceLocation {
                                        start: Position {
                                            line: 0,
                                            column: 1,
                                        },
                                        end: Position {
                                            line: 0,
                                            column: 3,
                                        },
                                    },
                                    span: 1..3,
                                    kind: Lit(
                                        Num(
                                            Num {
                                                loc: SourceLocation {
                                                    start: Position {
                                                        line: 0,
                                                        column: 1,
                                                    },
                                                    end: Position {
                                                        line: 0,
                                                        column: 3,
                                                    },
                                                },
                                                span: 1..3,
                                                value: "10",
                                            },
                                        ),
                                    ),
                                    inferred_type: None,
                                },
                            },
                        ),
                        inferred_type: None,
                    },
                ),
                inferred_type: None,
            },
        ],
    },
)
