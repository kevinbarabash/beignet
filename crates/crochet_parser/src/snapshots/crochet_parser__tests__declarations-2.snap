---
source: crates/crochet_parser/src/lib.rs
expression: "parse(\"let x = (a, b) => a + b;\")"
---
Ok(
    Program {
        body: [
            VarDecl {
                span: 0..24,
                pattern: Ident(
                    BindingIdent {
                        span: 4..5,
                        id: Ident {
                            span: 4..5,
                            name: "x",
                        },
                    },
                ),
                type_ann: None,
                init: Some(
                    Expr {
                        span: 8..23,
                        kind: Lambda(
                            Lambda {
                                params: [
                                    EFnParam {
                                        pat: Ident(
                                            EFnParamBindingIdent {
                                                span: 9..10,
                                                id: Ident {
                                                    span: 9..10,
                                                    name: "a",
                                                },
                                            },
                                        ),
                                        type_ann: None,
                                        optional: false,
                                        mutable: false,
                                    },
                                    EFnParam {
                                        pat: Ident(
                                            EFnParamBindingIdent {
                                                span: 12..13,
                                                id: Ident {
                                                    span: 12..13,
                                                    name: "b",
                                                },
                                            },
                                        ),
                                        type_ann: None,
                                        optional: false,
                                        mutable: false,
                                    },
                                ],
                                body: Expr {
                                    span: 18..23,
                                    kind: BinaryExpr(
                                        BinaryExpr {
                                            op: Add,
                                            left: Expr {
                                                span: 18..19,
                                                kind: Ident(
                                                    Ident {
                                                        span: 18..19,
                                                        name: "a",
                                                    },
                                                ),
                                            },
                                            right: Expr {
                                                span: 22..23,
                                                kind: Ident(
                                                    Ident {
                                                        span: 22..23,
                                                        name: "b",
                                                    },
                                                ),
                                            },
                                        },
                                    ),
                                },
                                is_async: false,
                                return_type: None,
                                type_params: None,
                            },
                        ),
                    },
                ),
                declare: false,
            },
        ],
    },
)
