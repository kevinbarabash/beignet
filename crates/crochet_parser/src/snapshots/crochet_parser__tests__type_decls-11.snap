---
source: crates/crochet_parser/src/lib.rs
expression: "parse(\"type Array<T> = {[key: number]: T}\")"
---
Ok(
    Program {
        body: [
            TypeDecl {
                span: 0..34,
                declare: false,
                id: Ident {
                    span: 5..10,
                    name: "Array",
                },
                type_ann: TypeAnn {
                    kind: Object(
                        ObjectType {
                            span: 16..34,
                            elems: [
                                Index(
                                    TIndex {
                                        span: 17..33,
                                        key: TypeAnnFnParam {
                                            pat: Pattern {
                                                span: 18..21,
                                                kind: Ident(
                                                    BindingIdent {
                                                        id: Ident {
                                                            span: 18..21,
                                                            name: "key",
                                                        },
                                                    },
                                                ),
                                                inferred_type: None,
                                            },
                                            type_ann: TypeAnn {
                                                kind: Keyword(
                                                    KeywordType {
                                                        span: 23..29,
                                                        keyword: Number,
                                                    },
                                                ),
                                                span: 23..29,
                                                inferred_type: None,
                                            },
                                            optional: false,
                                        },
                                        mutable: false,
                                        type_ann: TypeAnn {
                                            kind: TypeRef(
                                                TypeRef {
                                                    span: 32..33,
                                                    name: "T",
                                                    type_args: None,
                                                },
                                            ),
                                            span: 32..33,
                                            inferred_type: None,
                                        },
                                    },
                                ),
                            ],
                        },
                    ),
                    span: 16..34,
                    inferred_type: None,
                },
                type_params: Some(
                    [
                        TypeParam {
                            span: 11..12,
                            name: Ident {
                                span: 11..12,
                                name: "T",
                            },
                            constraint: None,
                            default: None,
                        },
                    ],
                ),
            },
        ],
    },
)
