---
source: crates/crochet_parser/src/lib.rs
expression: "parse(\"let tuple = [a, ...b];\")"
---
Ok(
    Program {
        body: [
            VarDecl {
                span: 0..22,
                pattern: Pattern {
                    span: 4..9,
                    kind: Ident(
                        BindingIdent {
                            name: "tuple",
                            mutable: false,
                            span: 4..9,
                        },
                    ),
                    inferred_type: None,
                },
                type_ann: None,
                init: Some(
                    Expr {
                        span: 12..21,
                        kind: Tuple(
                            Tuple {
                                elems: [
                                    ExprOrSpread {
                                        spread: None,
                                        expr: Expr {
                                            span: 13..14,
                                            kind: Ident(
                                                Ident {
                                                    span: 13..14,
                                                    name: "a",
                                                },
                                            ),
                                            inferred_type: None,
                                        },
                                    },
                                    ExprOrSpread {
                                        spread: Some(
                                            16..20,
                                        ),
                                        expr: Expr {
                                            span: 19..20,
                                            kind: Ident(
                                                Ident {
                                                    span: 19..20,
                                                    name: "b",
                                                },
                                            ),
                                            inferred_type: None,
                                        },
                                    },
                                ],
                            },
                        ),
                        inferred_type: None,
                    },
                ),
                declare: false,
            },
        ],
    },
)
