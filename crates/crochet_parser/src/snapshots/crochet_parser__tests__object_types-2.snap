---
source: crates/crochet_parser/src/lib.rs
expression: "parse(\"type Foo<T> = {mut [P in keyof T]?: T[P]};\")"
---
Ok(
    Program {
        body: [
            TypeDecl {
                span: 0..42,
                declare: false,
                id: Ident {
                    span: 5..8,
                    name: "Foo",
                },
                type_ann: TypeAnn {
                    kind: Mapped(
                        MappedType {
                            span: 15..40,
                            type_param: TypeParam {
                                span: 20..32,
                                name: Ident {
                                    span: 20..21,
                                    name: "P",
                                },
                                constraint: Some(
                                    TypeAnn {
                                        kind: KeyOf(
                                            KeyOfType {
                                                span: 25..32,
                                                type_ann: TypeAnn {
                                                    kind: TypeRef(
                                                        TypeRef {
                                                            span: 31..32,
                                                            name: "T",
                                                            type_args: None,
                                                        },
                                                    ),
                                                    span: 31..32,
                                                    inferred_type: None,
                                                },
                                            },
                                        ),
                                        span: 25..32,
                                        inferred_type: None,
                                    },
                                ),
                                default: None,
                            },
                            optional: Some(
                                TMappedTypeChange {
                                    span: 33..34,
                                    change: Plus,
                                },
                            ),
                            mutable: Some(
                                TMappedTypeChange {
                                    span: 15..18,
                                    change: Plus,
                                },
                            ),
                            type_ann: TypeAnn {
                                kind: IndexedAccess(
                                    IndexedAccessType {
                                        span: 36..40,
                                        obj_type: TypeAnn {
                                            kind: TypeRef(
                                                TypeRef {
                                                    span: 36..37,
                                                    name: "T",
                                                    type_args: None,
                                                },
                                            ),
                                            span: 36..37,
                                            inferred_type: None,
                                        },
                                        index_type: TypeAnn {
                                            kind: TypeRef(
                                                TypeRef {
                                                    span: 38..39,
                                                    name: "P",
                                                    type_args: None,
                                                },
                                            ),
                                            span: 38..39,
                                            inferred_type: None,
                                        },
                                    },
                                ),
                                span: 36..40,
                                inferred_type: None,
                            },
                        },
                    ),
                    span: 14..41,
                    inferred_type: None,
                },
                type_params: Some(
                    [
                        TypeParam {
                            span: 9..10,
                            name: Ident {
                                span: 9..10,
                                name: "T",
                            },
                            constraint: None,
                            default: None,
                        },
                    ],
                ),
            },
        ],
    },
)
