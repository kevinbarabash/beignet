---
source: crates/crochet_parser/src/lib.rs
expression: "parse(\"a <= b;\")"
---
Ok(
    Program {
        body: [
            Expr {
                loc: SourceLocation {
                    start: Position {
                        line: 0,
                        column: 0,
                    },
                    end: Position {
                        line: 0,
                        column: 7,
                    },
                },
                span: 0..7,
                expr: Expr {
                    loc: SourceLocation {
                        start: Position {
                            line: 0,
                            column: 0,
                        },
                        end: Position {
                            line: 0,
                            column: 6,
                        },
                    },
                    span: 0..6,
                    kind: BinaryExpr(
                        BinaryExpr {
                            op: LtEq,
                            left: Expr {
                                loc: SourceLocation {
                                    start: Position {
                                        line: 0,
                                        column: 0,
                                    },
                                    end: Position {
                                        line: 0,
                                        column: 1,
                                    },
                                },
                                span: 0..1,
                                kind: Ident(
                                    Ident {
                                        loc: SourceLocation {
                                            start: Position {
                                                line: 0,
                                                column: 0,
                                            },
                                            end: Position {
                                                line: 0,
                                                column: 1,
                                            },
                                        },
                                        span: 0..1,
                                        name: "a",
                                    },
                                ),
                                inferred_type: None,
                            },
                            right: Expr {
                                loc: SourceLocation {
                                    start: Position {
                                        line: 0,
                                        column: 5,
                                    },
                                    end: Position {
                                        line: 0,
                                        column: 6,
                                    },
                                },
                                span: 5..6,
                                kind: Ident(
                                    Ident {
                                        loc: SourceLocation {
                                            start: Position {
                                                line: 0,
                                                column: 5,
                                            },
                                            end: Position {
                                                line: 0,
                                                column: 6,
                                            },
                                        },
                                        span: 5..6,
                                        name: "b",
                                    },
                                ),
                                inferred_type: None,
                            },
                        },
                    ),
                    inferred_type: None,
                },
            },
        ],
    },
)
