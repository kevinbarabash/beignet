---
source: crates/crochet_parser/src/lib.rs
expression: "parse(\"let foo = do {console.log(x); x};\")"
---
Ok(
    Program {
        body: [
            VarDecl {
                span: 0..33,
                pattern: Pattern {
                    span: 4..7,
                    kind: Ident(
                        BindingIdent {
                            name: "foo",
                        },
                    ),
                    inferred_type: None,
                },
                type_ann: None,
                init: Some(
                    Expr {
                        span: 14..29,
                        kind: Let(
                            Let {
                                pattern: None,
                                type_ann: None,
                                init: Expr {
                                    span: 14..28,
                                    kind: App(
                                        App {
                                            lam: Expr {
                                                span: 14..25,
                                                kind: Member(
                                                    Member {
                                                        obj: Expr {
                                                            span: 14..21,
                                                            kind: Ident(
                                                                Ident {
                                                                    span: 14..21,
                                                                    name: "console",
                                                                },
                                                            ),
                                                            inferred_type: None,
                                                        },
                                                        prop: Ident(
                                                            Ident {
                                                                span: 22..25,
                                                                name: "log",
                                                            },
                                                        ),
                                                    },
                                                ),
                                                inferred_type: None,
                                            },
                                            args: [
                                                ExprOrSpread {
                                                    spread: None,
                                                    expr: Expr {
                                                        span: 26..27,
                                                        kind: Ident(
                                                            Ident {
                                                                span: 26..27,
                                                                name: "x",
                                                            },
                                                        ),
                                                        inferred_type: None,
                                                    },
                                                },
                                            ],
                                        },
                                    ),
                                    inferred_type: None,
                                },
                                body: Expr {
                                    span: 30..31,
                                    kind: Ident(
                                        Ident {
                                            span: 30..31,
                                            name: "x",
                                        },
                                    ),
                                    inferred_type: None,
                                },
                            },
                        ),
                        inferred_type: None,
                    },
                ),
                declare: false,
            },
        ],
    },
)
