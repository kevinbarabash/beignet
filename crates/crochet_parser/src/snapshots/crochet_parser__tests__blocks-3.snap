---
source: crates/crochet_parser/src/lib.rs
expression: "parse(\"do {let x = 5; let y = 10; x + y};\")"
---
Ok(
    Program {
        body: [
            Expr {
                span: 0..34,
                expr: Expr {
                    span: 4..14,
                    kind: Let(
                        Let {
                            pattern: Some(
                                Ident(
                                    BindingIdent {
                                        span: 8..9,
                                        id: Ident {
                                            span: 8..9,
                                            name: "x",
                                        },
                                    },
                                ),
                            ),
                            type_ann: None,
                            init: Expr {
                                span: 12..13,
                                kind: Lit(
                                    Num(
                                        Num {
                                            span: 12..13,
                                            value: "5",
                                        },
                                    ),
                                ),
                            },
                            body: Expr {
                                span: 15..26,
                                kind: Let(
                                    Let {
                                        pattern: Some(
                                            Ident(
                                                BindingIdent {
                                                    span: 19..20,
                                                    id: Ident {
                                                        span: 19..20,
                                                        name: "y",
                                                    },
                                                },
                                            ),
                                        ),
                                        type_ann: None,
                                        init: Expr {
                                            span: 23..25,
                                            kind: Lit(
                                                Num(
                                                    Num {
                                                        span: 23..25,
                                                        value: "10",
                                                    },
                                                ),
                                            ),
                                        },
                                        body: Expr {
                                            span: 27..32,
                                            kind: BinaryExpr(
                                                BinaryExpr {
                                                    op: Add,
                                                    left: Expr {
                                                        span: 27..28,
                                                        kind: Ident(
                                                            Ident {
                                                                span: 27..28,
                                                                name: "x",
                                                            },
                                                        ),
                                                    },
                                                    right: Expr {
                                                        span: 31..32,
                                                        kind: Ident(
                                                            Ident {
                                                                span: 31..32,
                                                                name: "y",
                                                            },
                                                        ),
                                                    },
                                                },
                                            ),
                                        },
                                    },
                                ),
                            },
                        },
                    ),
                },
            },
        ],
    },
)
