---
source: crates/crochet_parser/src/lib.rs
expression: "parse(\"let bar = () => { let x = Math.random(); x; };\")"
---
Ok(
    Program {
        body: [
            VarDecl {
                span: 0..46,
                pattern: Ident(
                    BindingIdent {
                        span: 4..7,
                        id: Ident {
                            span: 4..7,
                            name: "bar",
                        },
                    },
                ),
                type_ann: None,
                init: Some(
                    Lambda(
                        Lambda {
                            span: 10..45,
                            params: [],
                            body: Let(
                                Let {
                                    span: 18..40,
                                    pattern: Some(
                                        Ident(
                                            BindingIdent {
                                                span: 22..23,
                                                id: Ident {
                                                    span: 22..23,
                                                    name: "x",
                                                },
                                            },
                                        ),
                                    ),
                                    type_ann: None,
                                    init: App(
                                        App {
                                            span: 26..39,
                                            lam: Member(
                                                Member {
                                                    span: 26..37,
                                                    obj: Ident(
                                                        Ident {
                                                            span: 26..30,
                                                            name: "Math",
                                                        },
                                                    ),
                                                    prop: Ident(
                                                        Ident {
                                                            span: 31..37,
                                                            name: "random",
                                                        },
                                                    ),
                                                },
                                            ),
                                            args: [],
                                        },
                                    ),
                                    body: Let(
                                        Let {
                                            span: 41..43,
                                            pattern: None,
                                            type_ann: None,
                                            init: Ident(
                                                Ident {
                                                    span: 41..42,
                                                    name: "x",
                                                },
                                            ),
                                            body: Empty(
                                                Empty {
                                                    span: 0..0,
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                            is_async: false,
                            return_type: None,
                            type_params: None,
                        },
                    ),
                ),
                declare: false,
            },
        ],
    },
)
