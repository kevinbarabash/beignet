---
source: crates/crochet_tree_sitter_parser/src/lib.rs
expression: "parse(\"let foo = ([a, b]: [string, number]) => a;\")"
---
Ok(
    Program {
        body: [
            VarDecl {
                span: 0..42,
                pattern: Ident(
                    BindingIdent {
                        span: 4..7,
                        id: Ident {
                            span: 4..7,
                            name: "foo",
                        },
                    },
                ),
                type_ann: None,
                init: Some(
                    Lambda(
                        Lambda {
                            span: 10..41,
                            params: [
                                EFnParam {
                                    pat: Array(
                                        EFnParamArrayPat {
                                            span: 11..17,
                                            elems: [
                                                Some(
                                                    Ident(
                                                        EFnParamBindingIdent {
                                                            span: 12..13,
                                                            id: Ident {
                                                                span: 12..13,
                                                                name: "a",
                                                            },
                                                        },
                                                    ),
                                                ),
                                                Some(
                                                    Ident(
                                                        EFnParamBindingIdent {
                                                            span: 15..16,
                                                            id: Ident {
                                                                span: 15..16,
                                                                name: "b",
                                                            },
                                                        },
                                                    ),
                                                ),
                                            ],
                                        },
                                    ),
                                    type_ann: Some(
                                        Tuple(
                                            TupleType {
                                                span: 19..35,
                                                types: [
                                                    Prim(
                                                        PrimType {
                                                            span: 20..26,
                                                            prim: Str,
                                                        },
                                                    ),
                                                    Prim(
                                                        PrimType {
                                                            span: 28..34,
                                                            prim: Num,
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                    ),
                                    optional: false,
                                    mutable: false,
                                },
                            ],
                            body: Ident(
                                Ident {
                                    span: 40..41,
                                    name: "a",
                                },
                            ),
                            is_async: false,
                            return_type: None,
                            type_params: None,
                        },
                    ),
                ),
                declare: false,
            },
        ],
    },
)
