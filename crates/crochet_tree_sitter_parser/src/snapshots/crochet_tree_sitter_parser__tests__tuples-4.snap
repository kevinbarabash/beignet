---
source: crates/crochet_tree_sitter_parser/src/lib.rs
expression: "parse(\"let foo = () => [a, b];\")"
---
Ok(
    Program {
        body: [
            VarDecl {
                span: 0..23,
                pattern: Ident(
                    BindingIdent {
                        span: 4..7,
                        id: Ident {
                            span: 4..7,
                            name: "foo",
                        },
                    },
                ),
                type_ann: None,
                init: Some(
                    Lambda(
                        Lambda {
                            span: 10..22,
                            params: [],
                            body: Tuple(
                                Tuple {
                                    span: 16..22,
                                    elems: [
                                        ExprOrSpread {
                                            spread: None,
                                            expr: Ident(
                                                Ident {
                                                    span: 17..18,
                                                    name: "a",
                                                },
                                            ),
                                        },
                                        ExprOrSpread {
                                            spread: None,
                                            expr: Ident(
                                                Ident {
                                                    span: 20..21,
                                                    name: "b",
                                                },
                                            ),
                                        },
                                    ],
                                },
                            ),
                            is_async: false,
                            return_type: None,
                            type_params: None,
                        },
                    ),
                ),
                declare: false,
            },
        ],
    },
)
