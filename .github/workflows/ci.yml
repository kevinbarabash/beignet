name: CI

on: [push]

jobs:
  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-clippy

      - name: Clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features --no-deps

  build-wasm:
    name: Build WASM bundle
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install wasi-sdk
        run: |
          export WASI_VERSION=16
          export WASI_VERSION_FULL=${WASI_VERSION}.0
          wget https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-${WASI_VERSION}/wasi-sdk-${WASI_VERSION_FULL}-linux.tar.gz
          tar xvf wasi-sdk-${WASI_VERSION_FULL}-linux.tar.gz
          export WASI_SDK_PATH=`pwd`/wasi-sdk-${WASI_VERSION_FULL}
          echo "$WASI_SDK_PATH/bin" >> $GITHUB_PATH

      - name: Install wasm32-wasi target for rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: wasm32-wasi

      - name: Install node_modules
        run: yarn install --frozen-lockfile

      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            node_modules/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-build-wasm

      - name: Build .wasm Bundle
        run: yarn build-wasm

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Nodejs and npm
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "yarn"

      - name: Install node_modules
        run: yarn install --frozen-lockfile

      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-test

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Nodejs and npm
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "yarn"

      - name: Install node_modules
        run: yarn install --frozen-lockfile

      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-coverage

      - name: Run cargo-tarpaulin
        uses: actions-rs/tarpaulin@v0.1
        with:
          version: "0.20.0"
          args: "--exclude-files *_test.rs -- --test-threads 1"

      - name: Upload to codecov.io
        uses: codecov/codecov-action@v3
